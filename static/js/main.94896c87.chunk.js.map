{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","data","filterReducer","todosReducer","Array","isArray","rootReducer","combineReducers","currentTodo","filter","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","dispatch","useDispatch","useSelector","selectedTodo","visibleTodos","select","completed","query","title","toLowerCase","includes","className","map","id","cn","onClick","foundTodo","find","currentTodoActions","onOpen","TodoFilter","useState","setSelect","setQuery","handleChange","filterActions","onSubmit","event","preventDefault","onChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","fetchedUser","setFetchedUser","fetchUser","a","userFromServer","console","error","useEffect","href","email","name","App","loading","setloading","fetchTodos","todosFromServer","todosActions","warn","Root","ReactDOM","render","document","getElementById"],"mappings":"mOAgBaA,EALG,SAACC,GAAD,MAAgC,CAC9CC,KAAM,kBACNC,QAASF,IAGED,EAPM,iBAAyB,CAAEE,KAAM,uBA4BrCE,EAhBY,WAGd,IAFXC,EAEU,uDAFK,KACfC,EACU,uCACV,OAAQA,EAAOJ,MACb,IAAK,kBACH,OAAOI,EAAOH,QAEhB,IAAK,qBACH,OAAO,KAET,QACE,OAAOE,ICvBAL,EACA,SAACO,GAAD,MAAwB,CACjCL,KAAM,MACNC,QAASI,IAYEC,EARO,WAAmC,IAAlCH,EAAiC,uDAAzB,KAAMC,EAAmB,uCACtD,OAAIA,EAAOH,QACFG,EAAOH,QAGTE,G,QCdIL,EACN,SAACO,GAAD,MAAmB,CACtBL,KAAM,MACNC,QAASI,IAYEE,EARM,WAAiD,IAAhDJ,EAA+C,uDAA/B,GAAIC,EAA2B,uCACnE,MAAoB,QAAhBA,EAAOJ,MAAkBQ,MAAMC,QAAQL,EAAOH,SACzC,YAAIG,EAAOH,SAGbE,GCZHO,EAAcC,0BAAgB,CAClCC,YAAaV,EACbW,OAAQP,EACRQ,MAAOP,IAIIQ,EAAQC,sBACnBN,EACAO,8BACEC,0BAAgBC,O,4ECJPC,EAA4B,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACpCO,EAAWC,cACXT,EAAsBU,aAAoC,SAACpB,GAAD,OAAWA,EAAMU,UAC3EW,EAA4BD,aAChC,SAACpB,GAAD,OAAWA,EAAMS,eAWfa,EAAeX,EAmBnB,OAjBID,IACoB,cAAlBA,EAAOa,SACTD,EAAeA,EAAaZ,QAAO,SAAAd,GAAI,OAAIA,EAAK4B,cAG5B,WAAlBd,EAAOa,SACTD,EAAeA,EAAaZ,QAAO,SAAAd,GAAI,OAAKA,EAAK4B,cAG/Cd,EAAOe,QACTH,EAAeA,EACZZ,QAAO,SAAAd,GAAI,OAAIA,EAAK8B,MAClBC,cACAC,SAASlB,EAAOe,YAKvB,sCACIH,GACA,mBAAGO,UAAU,0BAAb,iEAKF,wBAAOA,UAAU,+BAAjB,UACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,wCAIJ,gCACGP,EAAaQ,KAAI,gBAChBC,EADgB,EAChBA,GACAP,EAFgB,EAEhBA,UACAE,EAHgB,EAGhBA,MAHgB,OAKhB,qBAAa,UAAQ,OAArB,UACE,oBAAIG,UAAU,eAAd,SAA8BE,IAE3BP,EAGG,oBAAIK,UAAU,eAAd,SACE,sBAAMA,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAJjB,oBAAIA,UAAU,iBAUpB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWG,IAAG,CACZ,mBAAoBR,EACpB,mBAAoBA,IAHxB,SAMGE,MAIL,oBAAIG,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVhC,KAAK,SACLoC,QAAS,YAvFV,SAACF,GACd,IAAMG,EAAYvB,EAAMwB,MAAK,SAAAvC,GAAI,OAAImC,IAAOnC,EAAKmC,MAE7CG,GACFhB,EAASkB,EAA2BF,IAoFtBG,CAAON,IALX,SAQE,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IAAG,MAAO,CACtB,gBAA4B,OAAZX,QAAY,IAAZA,OAAA,EAAAA,EAAcU,MAAOA,EACrC,UAAsB,OAAZV,QAAY,IAAZA,OAAA,EAAAA,EAAcU,MAAOA,cArChCA,eCxERO,EAAuB,WAClC,MAA4BC,mBAAS,OAArC,mBAAOhB,EAAP,KAAeiB,EAAf,KACA,EAA0BD,mBAAS,IAAnC,mBAAOd,EAAP,KAAcgB,EAAd,KACMvB,EAAWC,cAEXuB,EAAe,WACnBxB,EAASyB,EAAwB,CAC/BlB,QACAF,aAIJ,OACE,uBACEM,UAAU,mBACVe,SAAU,SAAAC,GACRA,EAAMC,kBAHV,UAME,mBAAGjB,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACEkB,SAAU,SAACF,GACTL,EAAUK,EAAMG,OAAOC,OACvBP,KAEF,UAAQ,eALV,UAOE,wBAAQO,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGpB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRhC,KAAK,OACLgC,UAAU,QACVqB,YAAY,YACZH,SAAU,SAACF,GACTJ,EAASI,EAAMG,OAAOC,OACtBP,OAGJ,sBAAMb,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBsB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRvD,KAAK,SACLgC,UAAU,oBC1DTwB,G,MAAmB,kBAC9B,qBAAKxB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASyB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAEMC,EAAU,SAACC,GAAD,OAAoBZ,EAAG,iBAAiBY,KCTlDC,EAA6B,SAAC,GAAc,IAAZvE,EAAW,EAAXA,KACrCsB,EAAWC,cACjB,EAAsCoB,mBAAsB,MAA5D,mBAAO6B,EAAP,KAAoBC,EAApB,KAEMC,EAAS,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,+EAEeN,EAAQC,GAFvB,OAERM,EAFQ,OAIdH,EAAeG,GAJD,gDAMdC,QAAQC,MAAM,kBANA,yDAAH,sDAUfC,qBAAU,WACJ/E,GACF0E,EAAU1E,EAAKsE,UAEhB,IAMH,OACE,sBAAKrC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEf,sBAAKA,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYjC,EAAKmC,MAIjB,wBACElC,KAAK,SACLgC,UAAU,SACV,UAAQ,cACRI,QAtBU,WAClBf,EAASkB,WAyBL,sBAAKP,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SAA4CjC,EAAK8B,QAEjD,oBAAGG,UAAU,QAAQ,UAAQ,aAA7B,UACGjC,EAAK4B,WACJ,wBAAQK,UAAU,mBAAlB,mBAEAjC,EAAK4B,WACL,wBAAQK,UAAU,kBAAlB,qBAGD,OACAuC,GAAe,mBAAGQ,KAAI,iBAAYR,EAAYS,OAA/B,SAAyCT,EAAYU,QACnEV,GAAe,cAAC,EAAD,iBC1DhBW,EAAgB,WAC3B,IAAM7D,EAAWC,cACXR,EAAgBS,aAA+B,SAACpB,GAAD,OAAWA,EAAMW,SAChEU,EAA4BD,aAChC,SAAApB,GAAK,OAAIA,EAAMS,eAEjB,EAA8B8B,oBAAS,GAAvC,mBAAOyC,EAAP,KAAgBC,EAAhB,KAEMC,EAAU,uCAAG,4BAAAX,EAAA,sEAEfU,GAAW,GAFI,SFFS3B,EAAY,UEErB,OAGT6B,EAHS,OAKfjE,EAASkE,EAAiBD,IAC1BF,GAAW,GANI,gDAQfR,QAAQY,KAAR,MARe,yDAAH,qDAgBhB,OAJAV,qBAAU,WACRO,MACC,IAGD,qCACE,qBAAKrD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,sBAAKA,UAAU,QAAf,UACGmD,GAAW,cAAC,EAAD,IACZ,cAAC,EAAD,CAAUrE,MAAOA,cAMxBU,GAAgB,cAAC,EAAD,CAAWzB,KAAMyB,QCjDlCiE,EAAO,kBACX,cAAC,IAAD,CAAU1E,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKN2E,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.94896c87.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export interface PayloadType {\n  query: string;\n  select: string;\n}\n\ninterface Action {\n  type: string,\n  payload: PayloadType,\n}\n\nexport const actions = {\n  setFilter: (data: PayloadType) => ({\n    type: 'set',\n    payload: data,\n  }),\n};\n\nconst filterReducer = (state = null, action: Action) => {\n  if (action.payload) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nexport default filterReducer;\n","/* eslint-disable no-console */\nimport { Todo } from '../types/Todo';\n\ninterface Action {\n  type: string,\n  payload: Todo[],\n}\n\nexport const actions = {\n  set: (data: Todo[]) => ({\n    type: 'set',\n    payload: data,\n  }),\n};\n\nconst todosReducer = (state: Todo[] = [], action: Action): Todo[] => {\n  if (action.type === 'set' && Array.isArray(action.payload)) {\n    return [...action.payload];\n  }\n\n  return state;\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport cn from 'classnames';\nimport { AppDispatch, RootState } from '../../app/store';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { PayloadType } from '../../features/filter';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const filter: PayloadType = useSelector<RootState, PayloadType>((state) => state.filter);\n  const selectedTodo: Todo | null = useSelector<RootState, Todo | null>(\n    (state) => state.currentTodo,\n  );\n\n  const onOpen = (id: number) => {\n    const foundTodo = todos.find(todo => id === todo.id);\n\n    if (foundTodo) {\n      dispatch(currentTodoActions.setTodo(foundTodo));\n    }\n  };\n\n  let visibleTodos = todos;\n\n  if (filter) {\n    if (filter.select === 'completed') {\n      visibleTodos = visibleTodos.filter(todo => todo.completed);\n    }\n\n    if (filter.select === 'active') {\n      visibleTodos = visibleTodos.filter(todo => !todo.completed);\n    }\n\n    if (filter.query) {\n      visibleTodos = visibleTodos\n        .filter(todo => todo.title\n          .toLowerCase()\n          .includes(filter.query));\n    }\n  }\n\n  return (\n    <>\n      {!visibleTodos && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visibleTodos.map(({\n            id,\n            completed,\n            title,\n          }) => (\n            <tr key={id} data-cy=\"todo\">\n              <td className=\"is-vcentered\">{id}</td>\n              {\n                !completed\n                  ? <td className=\"is-vcentered\" />\n                  : (\n                    <td className=\"is-vcentered\">\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    </td>\n                  )\n              }\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={cn({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    onOpen(id);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye-slash': selectedTodo?.id === id,\n                      'fa-eye': selectedTodo?.id !== id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../app/store';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const [select, setSelect] = useState('all');\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch<AppDispatch>();\n\n  const handleChange = () => {\n    dispatch(filterActions.setFilter({\n      query,\n      select,\n    }));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => {\n        event.preventDefault();\n      }}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(event) => {\n              setSelect(event.target.value);\n              handleChange();\n            }}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => {\n            setQuery(event.target.value);\n            handleChange();\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { AppDispatch } from '../../app/store';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const [fetchedUser, setFetchedUser] = useState<User | null>(null);\n\n  const fetchUser = async (userId: number) => {\n    try {\n      const userFromServer = await getUser(userId);\n\n      setFetchedUser(userFromServer);\n    } catch {\n      console.error('user not found');\n    }\n  };\n\n  useEffect(() => {\n    if (todo) {\n      fetchUser(todo.userId);\n    }\n  }, []);\n\n  const handleClose = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${todo.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={handleClose}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">{todo.title}</p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {todo.completed && (\n              <strong className=\"has-text-success\">Done</strong>\n            )}\n            {!todo.completed && (\n              <strong className=\"has-text-danger\">Planned</strong>\n            )}\n\n            {' by '}\n            {fetchedUser && <a href={`mailto:${fetchedUser.email}`}>{fetchedUser.name}</a>}\n            {!fetchedUser && <Loader />}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { AppDispatch, RootState } from './app/store';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const todos: Todo[] = useSelector<RootState, Todo[]>((state) => state.todos);\n  const selectedTodo: Todo | null = useSelector<RootState, Todo | null>(\n    state => state.currentTodo,\n  );\n  const [loading, setloading] = useState(false);\n\n  const fetchTodos = async () => {\n    try {\n      setloading(true);\n      const todosFromServer: Todo[] = await getTodos();\n\n      dispatch(todosActions.set(todosFromServer));\n      setloading(false);\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList todos={todos} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}